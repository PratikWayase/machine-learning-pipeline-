
name: Continuous Integration


on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write
  issues: write


permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  build:
    runs-on: ubuntu-latest
    
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Setup CML
        uses: iterative/setup-cml@v2
        
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          make install
          
      - name: Run code formatting
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Setup CML
        uses: iterative/setup-cml@v2
        
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          make install
          
      - name: Run code formatting
        run: make format
        
      - name: Train model
        
      - name: Train model
        run: make train
        
      - name: Run evaluation
        
      - name: Run evaluation
        env:
          REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: make eval
        
      - name: Update branch
        
      - name: Update branch
        env:
          GIT_USER_NAME: ${{ secrets.USER_NAME }}
          GIT_USER_EMAIL: ${{ secrets.USER_EMAIL }}
        run: |
          git config --global user.name "${GIT_USER_NAME}"
          git config --global user.email "${GIT_USER_EMAIL}"
          make update-branch USER_NAME=${GIT_USER_NAME} USER_EMAIL=${GIT_USER_EMAIL}